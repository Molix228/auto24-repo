x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  DATABASE_HOST: ${DB_HOST:-db}
  DATABASE_NAME: ${DB_NAME}
  DATABASE_USERNAME: ${DB_USER}
  DATABASE_PASSWORD: ${DB_PASSWORD}

services:
  db:
    image: postgres:15
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -h db"]
      interval: 5s
      timeout: 2s
      retries: 5

  app:
    privileged: true
    build:
        context: .
    volumes:
      - ./.env:/app/.env
      - ./Storage:/app/Storage
    env_file:
      - .env
    environment:
      <<: *shared_environment
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network
    command: ["/bin/sh", "-c", "if swift run migrate --check; then swift run migrate; fi && ./App serve --env production --hostname 0.0.0.0 --port 8080"]
    
  nginx:
    image: nginx:1.26.2
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./Storage:/app/Storage
      - ./certbot/www:/var/www/certbot
      - ./letsencrypt:/etc/letsencrypt
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app_network
    restart: always

volumes:
  db_data:
    driver: local

networks:
  app_network:
    driver: bridge
